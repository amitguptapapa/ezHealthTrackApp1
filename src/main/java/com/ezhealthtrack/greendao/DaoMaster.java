package com.ezhealthtrack.greendao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;
import de.greenrobot.dao.AbstractDaoMaster;
import de.greenrobot.dao.identityscope.IdentityScopeType;

import com.ezhealthtrack.greendao.Icd10ItemDao;
import com.ezhealthtrack.greendao.LabsDao;
import com.ezhealthtrack.greendao.RadiologyDao;
import com.ezhealthtrack.greendao.AreaDao;
import com.ezhealthtrack.greendao.CityDao;
import com.ezhealthtrack.greendao.CountryDao;
import com.ezhealthtrack.greendao.StateDao;
import com.ezhealthtrack.greendao.PatientDao;
import com.ezhealthtrack.greendao.AppointmentDao;
import com.ezhealthtrack.greendao.UserDao;
import com.ezhealthtrack.greendao.SoapNoteDao;
import com.ezhealthtrack.greendao.MasterSoapNoteDao;
import com.ezhealthtrack.greendao.AllergyDao;
import com.ezhealthtrack.greendao.MessageModelDao;
import com.ezhealthtrack.greendao.LabAppointmentDao;
import com.ezhealthtrack.greendao.PatientShowDao;
import com.ezhealthtrack.greendao.OrderDao;
import com.ezhealthtrack.greendao.OrderDetailDao;
import com.ezhealthtrack.greendao.LabTechnicianDao;
import com.ezhealthtrack.greendao.LabWorkFlowDao;
import com.ezhealthtrack.greendao.MedRecVisitNotesDao;
import com.ezhealthtrack.greendao.MedRecAllergyDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * Master of DAO (schema version 3): knows all DAOs.
*/
public class DaoMaster extends AbstractDaoMaster {
    public static final int SCHEMA_VERSION = 3;

    /** Creates underlying database table using DAOs. */
    public static void createAllTables(SQLiteDatabase db, boolean ifNotExists) {
        Icd10ItemDao.createTable(db, ifNotExists);
        LabsDao.createTable(db, ifNotExists);
        RadiologyDao.createTable(db, ifNotExists);
//        AreaDao.createTable(db, ifNotExists);
//        CityDao.createTable(db, ifNotExists);
//        CountryDao.createTable(db, ifNotExists);
//        StateDao.createTable(db, ifNotExists);
        PatientDao.createTable(db, ifNotExists);
        AppointmentDao.createTable(db, ifNotExists);
        UserDao.createTable(db, ifNotExists);
        SoapNoteDao.createTable(db, ifNotExists);
        MasterSoapNoteDao.createTable(db, ifNotExists);
        AllergyDao.createTable(db, ifNotExists);
        MessageModelDao.createTable(db, ifNotExists);
        LabAppointmentDao.createTable(db, ifNotExists);
        PatientShowDao.createTable(db, ifNotExists);
        OrderDao.createTable(db, ifNotExists);
        OrderDetailDao.createTable(db, ifNotExists);
        LabTechnicianDao.createTable(db, ifNotExists);
        LabWorkFlowDao.createTable(db, ifNotExists);
        MedRecVisitNotesDao.createTable(db, ifNotExists);
        MedRecAllergyDao.createTable(db, ifNotExists);
    }
    
    /** Drops underlying database table using DAOs. */
    public static void dropAllTables(SQLiteDatabase db, boolean ifExists) {
        Icd10ItemDao.dropTable(db, ifExists);
        LabsDao.dropTable(db, ifExists);
        RadiologyDao.dropTable(db, ifExists);
//        AreaDao.dropTable(db, ifExists);
//        CityDao.dropTable(db, ifExists);
//        CountryDao.dropTable(db, ifExists);
//        StateDao.dropTable(db, ifExists);
        PatientDao.dropTable(db, ifExists);
        AppointmentDao.dropTable(db, ifExists);
        UserDao.dropTable(db, ifExists);
        SoapNoteDao.dropTable(db, ifExists);
        MasterSoapNoteDao.dropTable(db, ifExists);
        AllergyDao.dropTable(db, ifExists);
        MessageModelDao.dropTable(db, ifExists);
        LabAppointmentDao.dropTable(db, ifExists);
        PatientShowDao.dropTable(db, ifExists);
        OrderDao.dropTable(db, ifExists);
        OrderDetailDao.dropTable(db, ifExists);
        LabTechnicianDao.dropTable(db, ifExists);
        LabWorkFlowDao.dropTable(db, ifExists);
        MedRecVisitNotesDao.dropTable(db, ifExists);
        MedRecAllergyDao.dropTable(db, ifExists);
    }
    
    public static abstract class OpenHelper extends SQLiteOpenHelper {

        public OpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory, SCHEMA_VERSION);
        }

        @Override
        public void onCreate(SQLiteDatabase db) {
            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
            createAllTables(db, false);
        }
    }
    
    /** WARNING: Drops all table on Upgrade! Use only during development. */
    public static class DevOpenHelper extends OpenHelper {
        public DevOpenHelper(Context context, String name, CursorFactory factory) {
            super(context, name, factory);
        }

        @Override
        public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
            dropAllTables(db, true);
            onCreate(db);
        }
    }

    public DaoMaster(SQLiteDatabase db) {
        super(db, SCHEMA_VERSION);
        registerDaoClass(Icd10ItemDao.class);
        registerDaoClass(LabsDao.class);
        registerDaoClass(RadiologyDao.class);
        registerDaoClass(AreaDao.class);
        registerDaoClass(CityDao.class);
        registerDaoClass(CountryDao.class);
        registerDaoClass(StateDao.class);
        registerDaoClass(PatientDao.class);
        registerDaoClass(AppointmentDao.class);
        registerDaoClass(UserDao.class);
        registerDaoClass(SoapNoteDao.class);
        registerDaoClass(MasterSoapNoteDao.class);
        registerDaoClass(AllergyDao.class);
        registerDaoClass(MessageModelDao.class);
        registerDaoClass(LabAppointmentDao.class);
        registerDaoClass(PatientShowDao.class);
        registerDaoClass(OrderDao.class);
        registerDaoClass(OrderDetailDao.class);
        registerDaoClass(LabTechnicianDao.class);
        registerDaoClass(LabWorkFlowDao.class);
        registerDaoClass(MedRecVisitNotesDao.class);
        registerDaoClass(MedRecAllergyDao.class);
    }
    
    public DaoSession newSession() {
        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
    }
    
    public DaoSession newSession(IdentityScopeType type) {
        return new DaoSession(db, type, daoConfigMap);
    }
    
}
