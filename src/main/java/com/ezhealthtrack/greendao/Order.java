package com.ezhealthtrack.greendao;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS
import com.ezhealthtrack.order.BillSummary;
// KEEP INCLUDES - put your custom includes here
import com.ezhealthtrack.order.Data;
import com.ezhealthtrack.order.OrderAudit;
import com.ezhealthtrack.order.OrderField;
import com.ezhealthtrack.order.OrderProduct;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoException;
// KEEP INCLUDES END
/**
 * Entity mapped to table ORDER.
 */
public class Order {

    private Long id;
    private String store_id;
    private String invoice_no;
    private String store_name;
    private String store_url;
    private String firstname;
    private String lastname;
    private String email;
    private String order_status_id;
    private String bill_status_id;
    private String ip;
    private String user_agent;
    private java.util.Date date_added;
    private java.util.Date date_modified;
    private String total;
    private String customer_id;
    private String currency_id;
    private String currency_code;
    private String order_display_id;
    private String balance_amount;
    private String paid_amount;
    private String paid_on;
    private String comment;
    private String from_date;
    private String to_date;
    private String payment_method;
    private String discount_percentage;
    private String discount_amount;
    private String tax_percentage;
    private String tax_amount;
    private String refund_amount;
    private String total_amount;
    private String generate_bill;
    private String approval_status;
    private String approved_by;
    private String order_workflow_id;
    private String order_external_id;
    private String order_bill_id;
    private String discount_type;
    private String fkey;
    private Long order_id;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient OrderDao myDao;
    private Long orderDetail__resolvedKey;


    // KEEP FIELDS - put your custom fields here
	@SerializedName("order_datail")
	public OrderDetail orderDetail;
	@SerializedName("bill_summary")
	@Expose
	private BillSummary billSummary;
	@Expose
	private List<OrderField> orderFields = new ArrayList<OrderField>();
	public Double total1 = 0.0;
	public Double discountPercent = 0.0;
	public Double payingAmount = 0.0;
	public Double balanceAmount = 0.0;
	public Double netAmount = 0.0;
	public static final String BILL_STATUS_NOT_PAID = "0";
	public static final String BILL_STATUS_PARTIALLY_PAID = "1";
	public static final String BILL_STATUS_FULLY_PAID = "2";
	public static final String BILL_STATUS_CANCEL = "3";
	public static final String BILL_STATUS_REFUND = "4";
	public static final String ORDER_STATUS_PENDING = "0";
	public static final String ORDER_STATUS_NEW = "1";
	public static final String ORDER_STATUS_CANCEL = "2";
	public static final String ORDER_STATUS_SAMPLING = "3";
	public static final String ORDER_STATUS_WAITING = "4";
	public static final String ORDER_STATUS_PARTIALLY_COMPLETE = "5";
	public static final String ORDER_STATUS_COMPLETE = "6";
	public static final String ORDER_STATUS_REORDER = "7";
	public ArrayList<OrderAudit> orderAudit = new ArrayList<OrderAudit>();
	@Expose
	private Data data = new Data();
    // KEEP FIELDS END

    public Order() {
    }

    public Order(Long id) {
        this.id = id;
    }

    public Order(Long id, String store_id, String invoice_no, String store_name, String store_url, String firstname, String lastname, String email, String order_status_id, String bill_status_id, String ip, String user_agent, java.util.Date date_added, java.util.Date date_modified, String total, String customer_id, String currency_id, String currency_code, String order_display_id, String balance_amount, String paid_amount, String paid_on, String comment, String from_date, String to_date, String payment_method, String discount_percentage, String discount_amount, String tax_percentage, String tax_amount, String refund_amount, String total_amount, String generate_bill, String approval_status, String approved_by, String order_workflow_id, String order_external_id, String order_bill_id, String discount_type, String fkey, Long order_id) {
        this.id = id;
        this.store_id = store_id;
        this.invoice_no = invoice_no;
        this.store_name = store_name;
        this.store_url = store_url;
        this.firstname = firstname;
        this.lastname = lastname;
        this.email = email;
        this.order_status_id = order_status_id;
        this.bill_status_id = bill_status_id;
        this.ip = ip;
        this.user_agent = user_agent;
        this.date_added = date_added;
        this.date_modified = date_modified;
        this.total = total;
        this.customer_id = customer_id;
        this.currency_id = currency_id;
        this.currency_code = currency_code;
        this.order_display_id = order_display_id;
        this.balance_amount = balance_amount;
        this.paid_amount = paid_amount;
        this.paid_on = paid_on;
        this.comment = comment;
        this.from_date = from_date;
        this.to_date = to_date;
        this.payment_method = payment_method;
        this.discount_percentage = discount_percentage;
        this.discount_amount = discount_amount;
        this.tax_percentage = tax_percentage;
        this.tax_amount = tax_amount;
        this.refund_amount = refund_amount;
        this.total_amount = total_amount;
        this.generate_bill = generate_bill;
        this.approval_status = approval_status;
        this.approved_by = approved_by;
        this.order_workflow_id = order_workflow_id;
        this.order_external_id = order_external_id;
        this.order_bill_id = order_bill_id;
        this.discount_type = discount_type;
        this.fkey = fkey;
        this.order_id = order_id;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getOrderDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getStore_id() {
        return store_id;
    }

    public void setStore_id(String store_id) {
        this.store_id = store_id;
    }

    public String getInvoice_no() {
        return invoice_no;
    }

    public void setInvoice_no(String invoice_no) {
        this.invoice_no = invoice_no;
    }

    public String getStore_name() {
        return store_name;
    }

    public void setStore_name(String store_name) {
        this.store_name = store_name;
    }

    public String getStore_url() {
        return store_url;
    }

    public void setStore_url(String store_url) {
        this.store_url = store_url;
    }

    public String getFirstname() {
        return firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    public String getLastname() {
        return lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getOrder_status_id() {
        return order_status_id;
    }

    public void setOrder_status_id(String order_status_id) {
        this.order_status_id = order_status_id;
    }

    public String getBill_status_id() {
        return bill_status_id;
    }

    public void setBill_status_id(String bill_status_id) {
        this.bill_status_id = bill_status_id;
    }

    public String getIp() {
        return ip;
    }

    public void setIp(String ip) {
        this.ip = ip;
    }

    public String getUser_agent() {
        return user_agent;
    }

    public void setUser_agent(String user_agent) {
        this.user_agent = user_agent;
    }

    public java.util.Date getDate_added() {
        return date_added;
    }

    public void setDate_added(java.util.Date date_added) {
        this.date_added = date_added;
    }

    public java.util.Date getDate_modified() {
        return date_modified;
    }

    public void setDate_modified(java.util.Date date_modified) {
        this.date_modified = date_modified;
    }

    public String getTotal() {
        return total;
    }

    public void setTotal(String total) {
        this.total = total;
    }

    public String getCustomer_id() {
        return customer_id;
    }

    public void setCustomer_id(String customer_id) {
        this.customer_id = customer_id;
    }

    public String getCurrency_id() {
        return currency_id;
    }

    public void setCurrency_id(String currency_id) {
        this.currency_id = currency_id;
    }

    public String getCurrency_code() {
        return currency_code;
    }

    public void setCurrency_code(String currency_code) {
        this.currency_code = currency_code;
    }

    public String getOrder_display_id() {
        return order_display_id;
    }

    public void setOrder_display_id(String order_display_id) {
        this.order_display_id = order_display_id;
    }

    public String getBalance_amount() {
        return balance_amount;
    }

    public void setBalance_amount(String balance_amount) {
        this.balance_amount = balance_amount;
    }

    public String getPaid_amount() {
        return paid_amount;
    }

    public void setPaid_amount(String paid_amount) {
        this.paid_amount = paid_amount;
    }

    public String getPaid_on() {
        return paid_on;
    }

    public void setPaid_on(String paid_on) {
        this.paid_on = paid_on;
    }

    public String getComment() {
        return comment;
    }

    public void setComment(String comment) {
        this.comment = comment;
    }

    public String getFrom_date() {
        return from_date;
    }

    public void setFrom_date(String from_date) {
        this.from_date = from_date;
    }

    public String getTo_date() {
        return to_date;
    }

    public void setTo_date(String to_date) {
        this.to_date = to_date;
    }

    public String getPayment_method() {
        return payment_method;
    }

    public void setPayment_method(String payment_method) {
        this.payment_method = payment_method;
    }

    public String getDiscount_percentage() {
        return discount_percentage;
    }

    public void setDiscount_percentage(String discount_percentage) {
        this.discount_percentage = discount_percentage;
    }

    public String getDiscount_amount() {
        return discount_amount;
    }

    public void setDiscount_amount(String discount_amount) {
        this.discount_amount = discount_amount;
    }

    public String getTax_percentage() {
        return tax_percentage;
    }

    public void setTax_percentage(String tax_percentage) {
        this.tax_percentage = tax_percentage;
    }

    public String getTax_amount() {
        return tax_amount;
    }

    public void setTax_amount(String tax_amount) {
        this.tax_amount = tax_amount;
    }

    public String getRefund_amount() {
        return refund_amount;
    }

    public void setRefund_amount(String refund_amount) {
        this.refund_amount = refund_amount;
    }

    public String getTotal_amount() {
        return total_amount;
    }

    public void setTotal_amount(String total_amount) {
        this.total_amount = total_amount;
    }

    public String getGenerate_bill() {
        return generate_bill;
    }

    public void setGenerate_bill(String generate_bill) {
        this.generate_bill = generate_bill;
    }

    public String getApproval_status() {
        return approval_status;
    }

    public void setApproval_status(String approval_status) {
        this.approval_status = approval_status;
    }

    public String getApproved_by() {
        return approved_by;
    }

    public void setApproved_by(String approved_by) {
        this.approved_by = approved_by;
    }

    public String getOrder_workflow_id() {
        return order_workflow_id;
    }

    public void setOrder_workflow_id(String order_workflow_id) {
        this.order_workflow_id = order_workflow_id;
    }

    public String getOrder_external_id() {
        return order_external_id;
    }

    public void setOrder_external_id(String order_external_id) {
        this.order_external_id = order_external_id;
    }

    public String getOrder_bill_id() {
        return order_bill_id;
    }

    public void setOrder_bill_id(String order_bill_id) {
        this.order_bill_id = order_bill_id;
    }

    public String getDiscount_type() {
        return discount_type;
    }

    public void setDiscount_type(String discount_type) {
        this.discount_type = discount_type;
    }

    public String getFkey() {
        return fkey;
    }

    public void setFkey(String fkey) {
        this.fkey = fkey;
    }

    public Long getOrder_id() {
        return order_id;
    }

    public void setOrder_id(Long order_id) {
        this.order_id = order_id;
    }

    /** To-one relationship, resolved on first access. */
    public OrderDetail getOrderDetail() {
        Long __key = this.order_id;
        if (orderDetail__resolvedKey == null || !orderDetail__resolvedKey.equals(__key)) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            OrderDetailDao targetDao = daoSession.getOrderDetailDao();
            OrderDetail orderDetailNew = targetDao.load(__key);
            synchronized (this) {
                orderDetail = orderDetailNew;
            	orderDetail__resolvedKey = __key;
            }
        }
        return orderDetail;
    }

    public void setOrderDetail(OrderDetail orderDetail) {
        synchronized (this) {
            this.orderDetail = orderDetail;
            order_id = orderDetail == null ? null : orderDetail.getId();
            orderDetail__resolvedKey = order_id;
        }
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here

	public void sum() {
		total1 = 0.0;
		for (OrderProduct Item : data.getOrderProducts()) {
			total1 = total1 + Double.parseDouble(Item.getPrice());

		}
		return;
	}

	public Double getNetAmount() {
		return Double.parseDouble(getTotal())
				+ Double.parseDouble(getTax_amount()) - getDiscount();

	}

	public Double getDiscount() {
		return total1 * discountPercent / 100;
	}

	public Double getPayableAmount() {
		return total1 - getDiscount();
	}

	public Double getBalanceAmount() {
		return getBillSummary().getTotalAmount()
				- Double.parseDouble(getTotalPaid())
				+ Double.parseDouble(getRefund());
	}

	public static String getBillStatus(String s) {
		if (s.contains(BILL_STATUS_NOT_PAID)) {
			return "Not Paid";
		} else if (s.contains(BILL_STATUS_PARTIALLY_PAID)) {
			return "Partially Paid";
		} else if (s.contains(BILL_STATUS_FULLY_PAID)) {
			return "Fully Paid";
		} else if (s.contains(BILL_STATUS_CANCEL)) {
			return "Cancel";
		} else if (s.contains(BILL_STATUS_REFUND)) {
			return "Refund";
		} else {
			return s;
		}
	}

	public String getBillStatus() {
		String s = bill_status_id;
		if (s.contains(BILL_STATUS_NOT_PAID)) {
			return "Not Paid";
		} else if (s.contains(BILL_STATUS_PARTIALLY_PAID)) {
			return "Partially Paid";
		} else if (s.contains(BILL_STATUS_FULLY_PAID)) {
			return "Fully Paid";
		} else if (s.contains(BILL_STATUS_CANCEL)) {
			return "Cancel";
		} else if (s.contains(BILL_STATUS_REFUND)) {
			return "Refund";
		} else {
			return s;
		}
	}

	public static String getOrderStatus(String s) {
		if (s.contains(ORDER_STATUS_PENDING)) {
			return "Pending";
		} else if (s.contains(ORDER_STATUS_NEW)) {
			return "New";
		} else if (s.contains(ORDER_STATUS_CANCEL)) {
			return "Cancel";
		} else if (s.contains(ORDER_STATUS_SAMPLING)) {
			return "Sampling";
		} else if (s.contains(ORDER_STATUS_WAITING)) {
			return "Waiting";
		} else if (s.contains(ORDER_STATUS_PARTIALLY_COMPLETE)) {
			return "Partially Complete";
		} else if (s.contains(ORDER_STATUS_COMPLETE)) {
			return "Complete";
		} else if (s.contains(ORDER_STATUS_REORDER)) {
			return "Re-Order";
		} else {
			return s;
		}

	}

	/**
	 * 
	 * @return The data
	 */
	public Data getData() {
		return data;
	}

	/**
	 * 
	 * @param data
	 *            The data
	 */
	public void setData(Data data) {
		this.data = data;
	}

	public String getOrderStatus() {
		String s = order_status_id;
		if (s.contains(ORDER_STATUS_PENDING)) {
			return "Pending";
		} else if (s.contains(ORDER_STATUS_NEW)) {
			return "New";
		} else if (s.contains(ORDER_STATUS_CANCEL)) {
			return "Cancel";
		} else if (s.contains(ORDER_STATUS_SAMPLING)) {
			return "Sampling";
		} else if (s.contains(ORDER_STATUS_WAITING)) {
			return "Waiting";
		} else if (s.contains(ORDER_STATUS_PARTIALLY_COMPLETE)) {
			return "Partially Complete";
		} else if (s.contains(ORDER_STATUS_COMPLETE)) {
			return "Complete";
		} else if (s.contains(ORDER_STATUS_REORDER)) {
			return "Re-Order";
		} else {
			return s;
		}

	}

	public String getDateAdded() {
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy hh:mm a");
		return sdf.format(date_added);
	}

	public String getTotalPaid() {
		double tp = 0.0;
		for (OrderAudit audit : orderAudit) {
			double paidAmount = Double.parseDouble(audit.getPaidAmount());
			if (paidAmount > 0)
				tp = tp + paidAmount;
		}
		return "" + tp;
	}

	public String getRefund() {
		double tp = 0.0;
		for (OrderAudit audit : orderAudit) {
			double paidAmount = Double.parseDouble(audit.getPaidAmount());
			if (paidAmount < 0)
				tp = tp + paidAmount;
		}
		tp = -tp;
		return "" + tp;
	}

	public String getBalance() {
		double tp = 0.0;
		for (OrderAudit audit : orderAudit) {
			double paidAmount = Double.parseDouble(audit.getPaidAmount());
			tp = tp + paidAmount;
		}
		tp = Double.parseDouble(total_amount) - tp;
		return "" + tp;
	}

	/**
	 * 
	 * @return The billSummary
	 */
	public BillSummary getBillSummary() {
		return billSummary;
	}

	/**
	 * 
	 * @param billSummary
	 *            The bill_summary
	 */
	public void setBillSummary(BillSummary billSummary) {
		this.billSummary = billSummary;
	}
	/**
	* 
	* @return
	* The orderFields
	*/
	public List<OrderField> getOrderFields() {
	return orderFields;
	}

	/**
	* 
	* @param orderFields
	* The orderFields
	*/
	public void setOrderFields(List<OrderField> orderFields) {
	this.orderFields = orderFields;
	}
    // KEEP METHODS END

}
